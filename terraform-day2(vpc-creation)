#CREATING VPC
resource "aws_vpc" "demo" {
  cidr_block = "10.0.0.0/16"
  enable_dns_hostnames = true
  tags = {
    Name = "my-cust-vpc"
  }
  
}

#CREATING IGW AND ATTACH TO VPC
resource "aws_internet_gateway" "T-igw" {
  vpc_id = aws_vpc.demo.id
  tags = {
    Name = "my-cust-igw"
  }
  
}

#CREATING PUBLIC SUBNET
resource "aws_subnet" "PUBLIC-SUBNET" {
  vpc_id = aws_vpc.demo.id
  cidr_block = "10.0.0.0/24"
  availability_zone = "ap-south-1a"
  map_public_ip_on_launch = true
  tags = {
    Name = "my-cust-public-subnet"
  }
  
}

#CREATING PUBLIC RT ANG GIVING PATH
resource "aws_route_table" "PUBLIC-RT" {
  vpc_id = aws_vpc.demo.id
  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.T-igw.id
  }
  tags = {
    Name = "my-cust-public-rt"
  }
}

resource "aws_route_table_association" "PUBLIC-SUBNET-ASSOCIATION" {
  subnet_id = aws_subnet.PUBLIC-SUBNET.id
  route_table_id = aws_route_table.PUBLIC-RT.id
  
  
}

#CREATING PRIVATE SUBNET
resource "aws_subnet" "PRIVATE-SUBNET" {
  vpc_id = aws_vpc.demo.id
  cidr_block = "10.0.1.0/24"
  availability_zone = "ap-south-1b"
  map_public_ip_on_launch = false
  tags = {
    Name = "my-cust-private-subnet"
  }
}

#CREATING PRIVATE RT AND SUBNET ASSOCIATION
resource "aws_route_table" "PRIVATE-RT" {
  vpc_id = aws_vpc.demo.id
  tags = {
    Name = "my-cust-private-rt"
  }
  
}

resource "aws_route_table_association" "PRIVATE-SUBNET-ASSOCIATION" {
  subnet_id = aws_subnet.PRIVATE-SUBNET.id
  route_table_id = aws_route_table.PRIVATE-RT.id
  
}


#CREATING EC2 UNDER PUBLIC-SUBNET
resource "aws_instance" "my-cust-ec2" {
  ami = "ami-04629cfb3bd2d73f3"
  instance_type = "t2.micro"
  key_name = "linux-kp"
  subnet_id = aws_subnet.PUBLIC-SUBNET.id
  tags = {
    Name = "my-cust-sub-ec2"
  }
  
}
